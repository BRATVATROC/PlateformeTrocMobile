/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */

/*  
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import com.codename1.charts.util.ColorUtil;
import com.codename1.components.ImageViewer;
import com.codename1.components.SpanLabel;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.Button;
import com.codename1.ui.Component;
import com.codename1.ui.Container;
import com.codename1.ui.InfiniteContainer;
import com.codename1.ui.List;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.list.MultiList;
import com.codename1.ui.table.DefaultTableModel;
import com.codename1.ui.table.Table;
import com.codename1.ui.table.TableModel;
import com.codename1.ui.util.UIBuilder;
import Entite.Commande;
import service.CommandeService;
import java.util.ArrayList;
import app.MyApplication;
import com.codename1.ui.Form;
import com.codename1.ui.Image;
import Entite.Annonce;

/**
 *
 * @author Hussam
 */
public class AffichageCommande {

    private Form form;
    private Resources theme;
    private int idCommande;

    public AffichageCommande(int id) {
        AffichageCom affCom = new AffichageCom();
        

        //form statique
        form = new Form("Order", BoxLayout.y());
        form.getToolbar().addCommandToSideMenu("Home", null , ev ->{  
        });
        
        form.getToolbar().addCommandToSideMenu("login", null , ev ->{ 
            
        });
        
        form.getToolbar().addCommandToSideMenu("Events", null , ev ->{  
            
            
        });
        
        form.getToolbar().addCommandToSideMenu("My Orders", null , ev ->{  
            affCom.getF().show();
            
        });
        
        form.getToolbar().addCommandToSideMenu("Events & Participants", null , ev ->{  
//            
            
        });
        
        form.getToolbar().addCommandToSideMenu("MY Events", null , ev ->{  
            
            
        });
        
        form.getToolbar().addCommandToSideMenu("Annonce", null , ev ->{  
            
        });
        form.getToolbar().addCommandToSideMenu("MyReclaims", null , ev ->{ 
//                         gui.MyReclaimsFrom rec = new gui.MyReclaimsFrom();
//                         rec.getForm().show();
                 
        });
        form.getToolbar().addCommandToSideMenu("Comments", null , ev ->{ 
            
            
        });
        
        CommandeService ser = new CommandeService();
        ArrayList<Annonce> annonces = new ArrayList<>();
            annonces = ser.getList4(id);
        //System.out.println(this.idCommande);
        //System.out.println(annonces);
        
        for (int i = 0 ; i<annonces.size(); i++){
            Image img;
        try {
            img = Image.createImage("/"+Integer.toString(i+4)+".jpg");
            
            form.add(img);
        } catch (IOException ex) {

        }
        form.add(new Label(annonces.get(i).getTitre()));
        form.add(new Label(annonces.get(i).getDescription()));
        form.add(new Label(Float.toString(annonces.get(i).getPrix())));
       
        
        //form.add(troquer);
    }
        
        Button modifier = new Button("Update");
        modifier.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent evt) {
                    ModifCommande modif = new ModifCommande(id);
                    modif.getF().show();
                }
            });
        form.add(modifier);
        
        
        
        
        
        
        //form.add(affichCommandes);
        form.show();
    }

    public Form getF() {
        return form;
    }

    public void setF(Form f) {
        this.form = f;
    }

    public int getIdCommande() {
        return idCommande;
    }

    public void setIdCommande(int idCommande) {
        this.idCommande = idCommande;
    }

    
    
}
