/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */

/*  
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import Entite.Annonce;
import com.codename1.charts.util.ColorUtil;
import com.codename1.components.ImageViewer;
import com.codename1.components.SpanLabel;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.Button;
import com.codename1.ui.Component;
import com.codename1.ui.Container;
import com.codename1.ui.InfiniteContainer;
import com.codename1.ui.List;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.list.MultiList;
import com.codename1.ui.table.DefaultTableModel;
import com.codename1.ui.table.Table;
import com.codename1.ui.table.TableModel;
import com.codename1.ui.util.UIBuilder;
import Service.CommandeService;
import java.util.ArrayList;
import com.codename1.ui.Form;
import com.codename1.ui.Image;

/**
 *
 * @author Hussam
 */
public class AffichageAnnonce {

    private Form form;
    private Resources theme;

    public AffichageAnnonce(int id) {
        AffichageCom affCom = new AffichageCom();

        //form statique
        form = new Form("Annonce", BoxLayout.y());
        Image img;
        try {
            img = Image.createImage("/1.jpg");
            form.add(img);
        } catch (IOException ex) {

        }
        
        Annonce a = new Annonce();
//        a.setId_annonce(id);
//        a.setDescription("sss");
//        a.setAdresse("Address from DB");
//        a.setPrix(22);
//        
//        
//        
//        form.add(new Label(a.getDescription()));
//        form.add(new Label(a.getAdresse()));
        form.add(new Label(String.valueOf(a.getPrix())));
        Button ajouterP = new Button("Add to cart");
        Button troquer = new Button("Exchange");
        Button affichCommandes = new Button("Show Orders");
        Button btnreclaim =new Button("Reclaim");
        form.add(ajouterP);
        form.add(troquer);
        form.add(affichCommandes);
        btnreclaim.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
        MyReclaimsFrom mr = new MyReclaimsFrom();
        mr.getForm().show();
                
            }
        });
        
        affichCommandes.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                affCom.getF().show();
            }
        });
        ajouterP.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                //add to cart
                Dialog.show("Cart", "Added successfully to cart", "OK", "");
                Form cartForm = new Form("Cart", BoxLayout.y());
                //Read cart from DB and 
                Container c1 = new Container(new BoxLayout(BoxLayout.X_AXIS));
                Image img;
                        try {
                            img = Image.createImage("/1.jpg");
                            c1.add(img);
                        } catch (IOException ex) {

                        }
                Container c2 = new Container(new BoxLayout(BoxLayout.Y_AXIS));
                Label name = new Label("Annonce 1");
                Label price = new Label("15 DT");
                Label description = new Label("Description 1");

                //Actions
                name.addPointerPressedListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent evt) {
                        Form afficheA = new Form(name.getText(), BoxLayout.y());
                        Image img;
                        try {
                            img = Image.createImage("/1.jpg");
                            afficheA.add(img);
                        } catch (IOException ex) {

                        }
                        afficheA.add(new Label("Description from DB"));
                        afficheA.add(new Label("Address from DB"));
                        afficheA.add(new Label("Price from DB"));
                        Button removeP = new Button("Remove from cart");
                        removeP.addActionListener(new ActionListener() {
                            @Override
                            public void actionPerformed(ActionEvent evt) {
                                //remove from cart
                                Dialog.show("Cart", "Removed successfully from cart", "OK", "");
                                form.show();
                            }
                        });
                        afficheA.add(removeP);
                        afficheA.show();
                    }
                });
                //adding the containers
                c1.setLeadComponent(name);
                c2.add(name);
                c2.add(description);
                //c1.add(img);
                c1.add(c2);
                cartForm.add(c1);
                cartForm.show();
            }
        });
        troquer.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                Form annonces = new Form("My Product List", BoxLayout.y());
                //Affichage liste de mes annonecs
                Container c1 = new Container(new BoxLayout(BoxLayout.X_AXIS));
                Image img;
                try {
                    img = Image.createImage("/2.jpg");
                    c1.add(img);
                } catch (IOException ex) {

                }
                Container c2 = new Container(new BoxLayout(BoxLayout.Y_AXIS));
                Label name = new Label("Annonce 2");
                Label price = new Label("20 DT");
                Label description = new Label("Description 2");
                Button confirmExchange = new Button("Confirm");
                confirmExchange.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent evt) {
                        Dialog.show("Exchange", "Your exchange request have been sent", "OK", "");
                        form.show();
                    }
                });
                //adding the containers
                //c1.setLeadComponent(name);
                c2.add(name);
                c2.add(description);
                c2.add(confirmExchange);
                //c1.add(img);
                c1.add(c2);
                annonces.add(c1);
                annonces.show();
            }
        });

        form.show();
    }

    public Form getF() {
        return form;
    }

    public void setF(Form f) {
        this.form = f;
    }

}
